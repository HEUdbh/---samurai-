"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
import sys
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
PROJECT_ROOT = BASE_DIR.parent.parent  # 指向 E:/model/samurai/

# 使用 Path 对象定义模型相关目录
SAMURAI_MASTER_DIR = PROJECT_ROOT / 'samurai_master'
SAM2_DIR = SAMURAI_MASTER_DIR / 'sam2'

# 确保这些目录存在
if not SAMURAI_MASTER_DIR.exists():
    raise RuntimeError(f"模型目录不存在: {SAMURAI_MASTER_DIR}")
if not SAM2_DIR.exists():
    raise RuntimeError(f"SAM2 模块目录不存在: {SAM2_DIR}")

# 将 samurai_master 目录添加到 Python 路径
# 注意：不需要添加 sam2 目录，因为它应该作为包从 samurai_master 导入
if str(SAMURAI_MASTER_DIR) not in sys.path:
    sys.path.insert(0, str(SAMURAI_MASTER_DIR))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-dp2^&6s9x$m!v7+v%42=_l1xdp02i&t8j(#@c@-4d+6+n439xd'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'myapp',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myproject.urls'

# 媒体文件配置
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# 上传目录配置
UPLOAD_DIR = os.path.join(MEDIA_ROOT, 'uploads')
PROCESSED_VIDEOS_DIR = os.path.join(MEDIA_ROOT, 'processed_videos')

# 确保必要的目录存在
os.makedirs(MEDIA_ROOT, exist_ok=True)
os.makedirs(UPLOAD_DIR, exist_ok=True)
os.makedirs(PROCESSED_VIDEOS_DIR, exist_ok=True)

# 允许上传大文件（100MB）
DATA_UPLOAD_MAX_MEMORY_SIZE = 1024 * 1024 * 100   #10MB
FILE_UPLOAD_MAX_MEMORY_SIZE = 1024 * 1024 * 100

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myproject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        # 使用 BASE_DIR (Path 对象) 和 / 操作符
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# CORS配置（允许前端跨域）
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",   #修改为实际的端口
    "http://127.0.0.1:5173",
]
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS'
]

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
# 如果您需要配置 STATIC_ROOT，也请使用 pathlib
# STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 模型配置
MODEL_CONFIG = {
    'MAIN_INFERENCE_SCRIPT': str(SAMURAI_MASTER_DIR / 'scripts' / 'main_inference.py'),
    'DEMO_SCRIPT': str(SAMURAI_MASTER_DIR / 'scripts' / 'demo.py'),  # 使用 Path 对象进行路径拼接
    'MAX_VIDEO_SIZE': 1024 * 1024 * 500,  # 500MB
    'TIMEOUT': 600  # 10分钟
}

# 添加日志配置 (使用 BASE_DIR 和 pathlib)
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            # 使用 BASE_DIR (Path 对象) 和 / 操作符
            'filename': BASE_DIR / 'debug.log',
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'myapp': {
            'handlers': ['file', 'console'],
            'level': 'DEBUG',
            'propagate': True,
        },
         'django': { # 添加 Django 框架日志监听，方便调试
            'handlers': ['console', 'file'],
            'level': 'INFO', # 可以设为 DEBUG 获取更详细信息
            'propagate': False,
        },
    },
}

# 文件上传配置
FILE_UPLOAD_HANDLERS = [
    'django.core.files.uploadhandler.MemoryFileUploadHandler',
    'django.core.files.uploadhandler.TemporaryFileUploadHandler',
]
FILE_UPLOAD_MAX_MEMORY_SIZE = 2621440  # 2.5 MB
FILE_UPLOAD_PERMISSIONS = 0o644
